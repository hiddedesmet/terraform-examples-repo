name: Terraform CD

on:
  push:
    branches: [ main ]
    paths:
      - 'Module-5/github/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - prd

env:
  TERRAFORM_VERSION: '1.1.7'
  WORKING_DIRECTORY: './Module-5/github'
  PROJECT_NAME: 'estfdemo'
  LOCATION: 'westeurope'

jobs:
  plan-dev:
    name: Plan Dev Environment
    runs-on: ubuntu-latest
    environment: dev
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Terraform Init
      run: |
        terraform init \
          -backend-config="resource_group_name=rg-${{ env.PROJECT_NAME }}-terra-dev" \
          -backend-config="storage_account_name=st${{ env.PROJECT_NAME }}terradev" \
          -backend-config="container_name=terraformstate" \
          -backend-config="key=terraform.tfstate"
      working-directory: ${{ env.WORKING_DIRECTORY }}

    - name: Terraform Format Check
      run: terraform fmt -check -recursive
      working-directory: ${{ env.WORKING_DIRECTORY }}

    - name: Terraform Validate
      run: terraform validate
      working-directory: ${{ env.WORKING_DIRECTORY }}

    - name: Terraform Plan
      run: |
        terraform plan \
          -var-file=./config/dev.tfvars \
          -out=dev-tf.plan \
          -detailed-exitcode \
          -lock=false
      working-directory: ${{ env.WORKING_DIRECTORY }}

    - name: Upload Plan Artifact
      uses: actions/upload-artifact@v4
      with:
        name: terraform-plan-dev
        path: ${{ env.WORKING_DIRECTORY }}/dev-tf.plan
        retention-days: 30

  deploy-dev:
    name: Deploy Dev Environment
    runs-on: ubuntu-latest
    needs: plan-dev
    environment: 
      name: dev
      url: https://portal.azure.com
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}

    - name: Download Plan Artifact
      uses: actions/download-artifact@v4
      with:
        name: terraform-plan-dev
        path: ${{ env.WORKING_DIRECTORY }}

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Terraform Init
      run: |
        terraform init \
          -backend-config="resource_group_name=rg-${{ env.PROJECT_NAME }}-terra-dev" \
          -backend-config="storage_account_name=st${{ env.PROJECT_NAME }}terradev" \
          -backend-config="container_name=terraformstate" \
          -backend-config="key=terraform.tfstate"
      working-directory: ${{ env.WORKING_DIRECTORY }}

    - name: Terraform Apply
      run: terraform apply -input=false dev-tf.plan
      working-directory: ${{ env.WORKING_DIRECTORY }}

  plan-prd:
    name: Plan Production Environment
    runs-on: ubuntu-latest
    needs: deploy-dev
    if: github.ref == 'refs/heads/main'
    environment: prd
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS_PRD }}

    - name: Terraform Init
      run: |
        terraform init \
          -backend-config="resource_group_name=rg-${{ env.PROJECT_NAME }}-terra-prd" \
          -backend-config="storage_account_name=st${{ env.PROJECT_NAME }}terraprd" \
          -backend-config="container_name=terraformstate" \
          -backend-config="key=terraform.tfstate"
      working-directory: ${{ env.WORKING_DIRECTORY }}

    - name: Terraform Format Check
      run: terraform fmt -check -recursive
      working-directory: ${{ env.WORKING_DIRECTORY }}

    - name: Terraform Validate
      run: terraform validate
      working-directory: ${{ env.WORKING_DIRECTORY }}

    - name: Terraform Plan
      run: |
        terraform plan \
          -var-file=./config/prd.tfvars \
          -out=prd-tf.plan \
          -detailed-exitcode \
          -lock=false
      working-directory: ${{ env.WORKING_DIRECTORY }}

    - name: Upload Plan Artifact
      uses: actions/upload-artifact@v4
      with:
        name: terraform-plan-prd
        path: ${{ env.WORKING_DIRECTORY }}/prd-tf.plan
        retention-days: 30

  deploy-prd:
    name: Deploy Production Environment
    runs-on: ubuntu-latest
    needs: plan-prd
    environment: 
      name: prd
      url: https://portal.azure.com
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}

    - name: Download Plan Artifact
      uses: actions/download-artifact@v4
      with:
        name: terraform-plan-prd
        path: ${{ env.WORKING_DIRECTORY }}

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS_PRD }}

    - name: Terraform Init
      run: |
        terraform init \
          -backend-config="resource_group_name=rg-${{ env.PROJECT_NAME }}-terra-prd" \
          -backend-config="storage_account_name=st${{ env.PROJECT_NAME }}terraprd" \
          -backend-config="container_name=terraformstate" \
          -backend-config="key=terraform.tfstate"
      working-directory: ${{ env.WORKING_DIRECTORY }}

    - name: Terraform Apply
      run: terraform apply -input=false prd-tf.plan
      working-directory: ${{ env.WORKING_DIRECTORY }}
